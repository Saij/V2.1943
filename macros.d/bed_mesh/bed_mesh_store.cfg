## use BED_MESH_STORE                       -> generate MESH and park in the middle
## use BED_MESH_STORE SAVE=now              -> generate MESH and park in the middle and save immediately 
## use BED_MESH_STORE PARK=false            -> generate MESH
## use BED_MESH_STORE SAVE=later            -> generate MESH and park in the middle and save it later 
[gcode_macro BED_MESH_STORE]
description: Generate a mesh, name it and run save_config if requested
variable_save_at_end: False
gcode:
    {% set user = printer['gcode_macro _USER_VARIABLE'] %}
    {% set name = '' if printer.save_variables.variables.plates is not defined 
                   else printer.save_variables.variables.plates.array[printer.save_variables.variables.plates.index].name + '-' %}
    {% set mesh_name = name + "Bed_Temp-" + printer.heater_bed.target|int|string + "C" %}
    {action_respond_info("BED_MESH: Generate \"%s\"" % mesh_name)}
    BED_MESH_CALIBRATE PROFILE={mesh_name}
    {% if params.PARK|default('true')|lower == 'true' %}
        G90                                                                   ; set absolute
        G0 Z{user.park.bed.z} F{user.speed.z_hop}                             ; lift first
        G0 X{user.park.bed.x} Y{user.park.bed.y} F{user.speed.travel}         ; park toolhead
        {% if not printer.gcode_move.absolute_coordinates %} 
            G91 ; set it back to relative
        {% endif %} 
    {% endif %}
    {% if params.SAVE|default('none')|lower == 'now' %}
        _PRINT_AR T="BED_MESH: Save Config!"
        SAVE_CONFIG
    {% elif params.SAVE|default('none')|lower == 'later' %}
        _PRINT_AR T="BED_MESH: Save Config after print done"
        SET_GCODE_VARIABLE MACRO=BED_MESH_STORE VARIABLE=save_at_end VALUE=True
    {% endif %}