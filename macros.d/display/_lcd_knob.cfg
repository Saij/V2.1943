[gcode_macro _LCD_KNOB]
description: Helper: Set LCD Knob color
variable_knob: {'act'    : {'pri': {'R': 0.0, 'G': 0.3, 'B': 0.0},
                            'sec': {'R': 0.0, 'G': 0.0, 'B': 0.0}},
                'restore': {'pri': {'R': 0.0, 'G': 0.0, 'B': 0.0},
                            'sec': {'R': 0.0, 'G': 0.0, 'B': 0.0}},
                'time'   : 0,
                'sync'   : 0}
variable_select: 1  ; used to select what neopixel is active while blinking
gcode:
    ##### color definition #####
    {% set color_dic = printer["gcode_macro _COLORS"].colors %}

    ##### get PARAMETERS or use defaults values #####
    {% set _dummy = knob.update({'time': params.BLINK|default(0)|float}) %}
    {% set _dummy = knob.update({'sync': params.SYNC|default(0)|int}) %}
    {% if 'COLOR' in params|upper %}
        {% set color = params.COLOR|upper %}
        {% set _dummy = knob.restore.update({'pri': knob.act.pri}) %}
        {% if color in color_dic %}
            {% set _dummy = knob.act.update({'pri': color_dic[color]}) %}
        {% else %}
            {action_respond_info("LCD KNOB COLOR %s is not defined used default: GREEN" % color)}
            {% set _dummy = knob.act.update({'pri': color_dic.GREEN}) %}
        {% endif %}
    {% else %}
        {% set _dummy = knob.act.update({'pri': knob.restore.pri}) %}
    {% endif %}
  
    ##### store new variable values #####
    SET_GCODE_VARIABLE MACRO=_LCD_KNOB VARIABLE=knob VALUE="{knob}"
  
    ##### update to new color and start or stop blinking #####
    SET_LED LED=neo_display RED={knob.act.pri.R} GREEN={knob.act.pri.G}  BLUE={knob.act.pri.B} INDEX=1 TRANSMIT=0 SYNC={knob.sync}
    SET_LED LED=neo_display RED={knob.act.pri.R} GREEN={knob.act.pri.G}  BLUE={knob.act.pri.B} INDEX=2 TRANSMIT=1 SYNC={knob.sync}
    UPDATE_DELAYED_GCODE ID=_BLINK_DELAY DURATION={knob.time}